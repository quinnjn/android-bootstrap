apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'io.fabric'

def appProps = new Properties()
file("app.properties").withInputStream {
    stream -> appProps.load(stream)
}

task createFabricProperties << {
  Properties fabricProps = new Properties()
  File fabricFile = file("fabric.properties")
  if (!fabricFile.exists()) {
    fabricFile.write('')
  }
  fabricProps.load(fabricFile.newDataInputStream())
  fabricProps.setProperty('apiKey', appProps['fabric.apiKey'])
  fabricProps.setProperty('apiSecret', appProps['fabric.apiSecret'])
  fabricProps.store(fabricFile.newWriter(), null)
}

project.tasks.findAll {
  // We should find crashlytics tasks, but that doesn't seem to work
  if (it.name.startsWith('assemble')) {
    it.finalizedBy createFabricProperties
  }
}

android {
    compileSdkVersion 24
    buildToolsVersion "24.0.0"

    defaultConfig {
        applicationId "com.neumiiller.bootstrap"
        minSdkVersion 24
        targetSdkVersion 24
        versionCode 1
        versionName "1.0"
        manifestPlaceholders = ['fabric.apiKey': appProps['fabric.apiKey']]
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }
}

repositories {
    mavenCentral()
    maven { url 'https://maven.fabric.io/public' }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    testCompile 'junit:junit:4.12'
    compile 'com.android.support:appcompat-v7:24.2.0'
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    compile('com.crashlytics.sdk.android:crashlytics:2.6.3@aar') { transitive = true; }
}
